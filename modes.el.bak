(setq load-path (cons "~/emacs/ide" load-path))

;; cedet
(add-to-list 'load-path (expand-file-name "~/emacs/elib-1.0"))
(add-to-list 'load-path (expand-file-name "~/emacs/ide/cedet-1.0pre3/common"))
(add-to-list 'load-path (expand-file-name "~/emacs/ide/cedet-1.0pre3/semantic"))
(add-to-list 'load-path (expand-file-name "~/emacs/ide/cedet-1.0pre3/speedbar"))
(add-to-list 'load-path (expand-file-name "~/emacs/ide/cedet-1.0pre3/eieio"))
(add-to-list 'load-path (expand-file-name "~/emacs/ide/jde-2.3.5.1/lisp"))
;; Initialize CEDET
(load "cedet")
;; bug with semantic-idle
(setq semantic-idle-scheduler-idle-time 99999999)
(global-semantic-idle-scheduler-mode -1) 
;; semantic 搜索范围
(setq semanticdb-project-roots 
      (list
       (expand-file-name "/")))

;; 自定义自动补齐命令，这部分是抄hhuu的，如果在单词中间就补齐，否则就是tab。 
(defun my-indent-or-complete ()
   (interactive)
   (if (looking-at "\\>")
 	  (hippie-expand nil)
 	  (indent-for-tab-command))
   )
(global-set-key [(control tab)] 'my-indent-or-complete)
(global-set-key [(control c)(control v)] 'compile)

;; hippie-expand的自动补齐策略，优先调用了senator的分析结果： 
(autoload 'senator-try-expand-semantic "senator")
(setq hippie-expand-try-functions-list
      '(
	senator-try-expand-semantic
	try-expand-dabbrev
	try-expand-dabbrev-visible
	try-expand-dabbrev-all-buffers
	try-expand-dabbrev-from-kill
	try-expand-list
	try-expand-list-all-buffers
	try-expand-line
        try-expand-line-all-buffers
        try-complete-file-name-partially
        try-complete-file-name
        try-expand-whole-kill
        )
      )

;; show speedbar
(global-set-key [(control f1)] 'speedbar)

;; c/c++
(load "c")
;; jde
(load "java")
;; ruby
(load "ruby")

;; python
(require 'sb-info)
(setq load-path (cons "~/emacs/ide/python" load-path))
(setq auto-mode-alist (cons '("\\.py$" . python-mode) auto-mode-alist))
(setq interpreter-mode-alist
      (cons '("python" . python-mode) interpreter-mode-alist)
      python-mode-hook
      '(lambda () (progn
           (set-variable 'py-indent-offset 2)
           (set-variable 'py-smart-indentation nil)
           (set-variable 'indent-tabs-mode nil))))
(autoload 'python-mode "python-mode" "python editing mode." t)
(autoload 'pdb "python-debug" "python debug." t)

;;格式化整个文件。Eclipse下面CTRL+SHIFT+F就解决问题了。Vim下面gg=G也顺利搞定。Emacs下面得C-x h TAB。怎么敲速度都上不去。有了下面这段代码，事情就好办多了, M-x iwb
(defun iwb ()
 "indent whole buffer"
 (interactive)
 (delete-trailing-whitespace)
 (indent-region (point-min) (point-max) nil))

;(global-set-key [(alt f)] 'iwb)

;;一列语言中的每一个创建一组mode-map(其实就是Lisp里的一个Pair类型)。如果在创建的mode-map或者global-map里找到了\C-j的定义，就把它替换成回车。这样做的好处是我们只需要替换自己关心的语言模式。其它情况下\C-j不受影响。
(mapcar
 (lambda (mode)
   (let ((mode-hook (intern (concat (symbol-name mode) "-hook")))
         (mode-map (intern (concat (symbol-name mode) "-map"))))
     (add-hook mode-hook
               `(lambda nil 
                        (local-set-key 
                               (kbd "RET")
                               (or (lookup-key ,mode-map "\C-j")
                                   (lookup-key global-map "\C-j"))))))) '(c-mode c++-mode cperl-mode emacs-lisp-mode java-mode html-mode lisp-mode ruby-mode sh-mode))



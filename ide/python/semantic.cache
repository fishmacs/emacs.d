;; Object python/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "python/"
  :tables (list 
   (semanticdb-table "python-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("py-version" variable (:constant-flag t :default-value "$Revision: 4.75 $") nil [333 408]) ("comint" include nil nil [3202 3219]) ("custom" include nil nil [3220 3237]) ("cl" include nil nil [3238 3251]) ("compile" include nil nil [3252 3270]) ("ansi-color" include nil nil [3271 3292]) ("defgroup" code nil nil [3389 3520]) ("py-tab-always-indent" variable (:user-visible-flag t :default-value t) nil [3522 3740]) ("py-python-command" variable (:user-visible-flag t :default-value "python") nil [3742 3866]) ("make-obsolete-variable" code nil nil [3868 3931]) ("py-jython-command" variable (:user-visible-flag t :default-value "jython") nil [3932 4084]) ("py-default-interpreter" variable (:user-visible-flag t :default-value (quote cpython)) nil [4086 4864]) ("py-python-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [4866 5021]) ("make-obsolete-variable" code nil nil [5023 5096]) ("py-jython-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [5097 5281]) ("py-indent-offset" variable (:user-visible-flag t :default-value 4) nil [5283 5503]) ("py-continuation-offset" variable (:user-visible-flag t :default-value 4) nil [5505 5817]) ("py-smart-indentation" variable (:user-visible-flag t :default-value t) nil [5819 6848]) ("py-align-multiline-strings-p" variable (:user-visible-flag t :default-value t) nil [6850 7255]) ("py-block-comment-prefix" variable (:user-visible-flag t :default-value "##") nil [7257 7679]) ("py-honor-comment-indentation" variable (:user-visible-flag t :default-value t) nil [7681 8653]) ("py-temp-directory" variable (:user-visible-flag t :default-value (let ((ok (quote (lambda (x) (and x (setq x (expand-file-name x)) (file-directory-p x) (file-writable-p x) x))))) (or (funcall ok (getenv "TMPDIR")) (funcall ok "/usr/tmp") (funcall ok "/tmp") (funcall ok "/var/tmp") (funcall ok ".") (error "Couldn't find a usable temp directory -- set `py-temp-directory'")))) nil [8655 9347]) ("py-beep-if-tab-change" variable (:user-visible-flag t :default-value t) nil [9349 9842]) ("py-jump-on-exception" variable (:user-visible-flag t :default-value t) nil [9844 10158]) ("py-ask-about-save" variable (:default-value t) nil [10160 10359]) ("py-backspace-function" variable (:user-visible-flag t :default-value (quote backward-delete-char-untabify)) nil [10361 10533]) ("py-delete-function" variable (:user-visible-flag t :default-value (quote delete-char)) nil [10535 10682]) ("py-imenu-show-method-args-p" variable (:user-visible-flag t) nil [10684 10877]) ("make-variable-buffer-local" code nil nil [10878 10924]) ("py-pdbtrack-do-tracking-p" variable (:user-visible-flag t :default-value t) nil [10926 11383]) ("make-variable-buffer-local" code nil nil [11384 11439]) ("py-pdbtrack-minor-mode-string" variable (:user-visible-flag t :default-value " PDB") nil [11441 11590]) ("py-import-check-point-max" variable (:default-value 20000) nil [11592 12003]) ("make-obsolete-variable" code nil nil [12005 12070]) ("py-jython-packages" variable (:default-value (quote ("java" "javax" "org" "com"))) nil [12071 12223]) ("py-master-file" variable nil nil [12245 12756]) ("make-variable-buffer-local" code nil nil [12757 12801]) ("py-pychecker-command" variable (:user-visible-flag t :default-value "pychecker") nil [12803 12949]) ("py-pychecker-command-args" variable (:user-visible-flag t :default-value (quote ("--stdlib"))) nil [12951 13133]) ("py-shell-alist" variable (:user-visible-flag t :default-value (quote (("jython" quote jython) ("python" quote cpython)))) nil [13135 13344]) ("py-shell-input-prompt-1-regexp" variable (:user-visible-flag t :default-value "^>>> ") nil [13346 13495]) ("py-shell-input-prompt-2-regexp" variable (:user-visible-flag t :default-value "^[.][.][.] ") nil [13497 13684]) ("py-shell-switch-buffers-on-execute" variable (:user-visible-flag t :default-value t) nil [13686 13930]) ("py-line-number-offset" variable nil nil [14048 14340]) ("py-emacs-features" variable (:constant-flag t :default-value (let (features) features)) nil [14342 14573]) ("py-pseudo-keyword-face" variable (:default-value (quote py-pseudo-keyword-face)) nil [14625 14759]) ("make-face" code nil nil [14760 14795]) ("py-decorators-face" variable (:default-value (quote py-decorators-face)) nil [14819 14894]) ("make-face" code nil nil [14895 14926]) ("py-builtins-face" variable (:default-value (quote py-builtins-face)) nil [14949 15054]) ("make-face" code nil nil [15055 15084]) ("py-font-lock-mode-hook" function nil nil [15086 15483]) ("add-hook" code nil nil [15484 15539]) ("python-font-lock-keywords" variable (:default-value (let ((kw1 (mapconcat (quote identity) (quote ("and" "assert" "break" "class" "continue" "def" "del" "elif" "else" "except" "exec" "for" "from" "global" "if" "import" "in" "is" "lambda" "not" "or" "pass" "print" "raise" "return" "while" "yield")) "\\|")) (kw2 (mapconcat (quote identity) (quote ("else:" "except:" "finally:" "try:")) "\\|")) (kw3 (mapconcat (quote identity) (quote ("__debug__" "__import__" "__name__" "abs" "apply" "basestring" "bool" "buffer" "callable" "chr" "classmethod" "cmp" "coerce" "compile" "complex" "copyright" "delattr" "dict" "dir" "divmod" "enumerate" "eval" "execfile" "exit" "file" "filter" "float" "getattr" "globals" "hasattr" "hash" "hex" "id" "input" "int" "intern" "isinstance" "issubclass" "iter" "len" "license" "list" "locals" "long" "map" "max" "min" "object" "oct" "open" "ord" "pow" "property" "range" "raw_input" "reduce" "reload" "repr" "round" "setattr" "slice" "staticmethod" "str" "sum" "super" "tuple" "type" "unichr" "unicode" "vars" "xrange" "zip")) "\\|")) (kw4 (mapconcat (quote identity) (quote ("ArithmeticError" "AssertionError" "AttributeError" "DeprecationWarning" "EOFError" "EnvironmentError" "Exception" "FloatingPointError" "FutureWarning" "IOError" "ImportError" "IndentationError" "IndexError" "KeyError" "KeyboardInterrupt" "LookupError" "MemoryError" "NameError" "NotImplemented" "NotImplementedError" "OSError" "OverflowError" "OverflowWarning" "PendingDeprecationWarning" "ReferenceError" "RuntimeError" "RuntimeWarning" "StandardError" "StopIteration" "SyntaxError" "SyntaxWarning" "SystemError" "SystemExit" "TabError" "TypeError" "UnboundLocalError" "UnicodeDecodeError" "UnicodeEncodeError" "UnicodeError" "UnicodeTranslateError" "UserWarning" "ValueError" "Warning" "ZeroDivisionError")) "\\|"))) (list (quote ("^[ 	]*\\(@.+\\)" 1 (quote py-decorators-face))) (cons (concat "\\<\\(" kw1 "\\)\\>[ 
	(]") 1) (list (concat "\\([^. 	]\\|^\\)[ 	]*\\<\\(" kw3 "\\)\\>[ 
	(]") 2 (quote py-builtins-face)) (cons (concat "\\<\\(" kw2 "\\)[ 
	(]") 1) (list (concat "\\<\\(" kw4 "\\)[ 
	:,(]") 1 (quote py-builtins-face)) (quote ("[ 	]*\\(\\<from\\>.*\\)?\\<import\\>.*\\<\\(as\\)\\>" . 2)) (quote ("\\<class[ 	]+\\([a-zA-Z_]+[a-zA-Z0-9_]*\\)" 1 font-lock-type-face)) (quote ("\\<def[ 	]+\\([a-zA-Z_]+[a-zA-Z0-9_]*\\)" 1 font-lock-function-name-face)) (quote ("\\<\\(self\\|None\\|True\\|False\\|Ellipsis\\)\\>" 1 py-pseudo-keyword-face))))) nil [15541 18764]) ("put" code nil nil [18765 18832]) ("py-file-queue" variable nil nil [18902 19029]) ("py-pdbtrack-is-tracking-p" variable nil nil [19031 19069]) ("py-pychecker-history" variable nil nil [19071 19104]) ("py-stringlit-re" variable (:constant-flag t :default-value (concat "[rR]?'''[^']*\\(\\('[^']\\|''[^']\\)[^']*\\)*'''" "\\|" "[rR]?\"\"\"[^\"]*\\(\\(\"[^\"]\\|\"\"[^\"]\\)[^\"]*\\)*\"\"\"" "\\|" "[rR]?'\\([^'
\\]\\|\\\\.\\)*'" "\\|" "[rR]?\"\\([^\"
\\]\\|\\\\.\\)*\"")) nil [19123 19900]) ("py-continued-re" variable (:constant-flag t :default-value (concat "\\(" "[^#'\"
\\]" "\\|" py-stringlit-re "\\)*" "\\\\$")) nil [19902 20173]) ("py-blank-or-comment-re" variable (:constant-flag t :default-value "[ 	]*\\($\\|#\\)") nil [20175 20285]) ("py-outdent-re" variable (:constant-flag t :default-value (concat "\\(" (mapconcat (quote identity) (quote ("else:" "except\\(\\s +.*\\)?:" "finally:" "elif\\s +.*:")) "\\|") "\\)")) nil [20287 20531]) ("py-block-closing-keywords-re" variable (:constant-flag t :default-value "\\(return\\|raise\\|break\\|continue\\|pass\\)") nil [20533 20695]) ("py-no-outdent-re" variable (:constant-flag t :default-value (concat "\\(" (mapconcat (quote identity) (list "try:" "except\\(\\s +.*\\)?:" "while\\s +.*:" "for\\s +.*:" "if\\s +.*:" "elif\\s +.*:" (concat py-block-closing-keywords-re "[ 	
]")) "\\|") "\\)")) nil [20697 21044]) ("py-traceback-line-re" variable (:default-value "[ 	]+File \"\\([^\"]+\\)\", line \\([0-9]+\\)") nil [21046 21176]) ("py-pdbtrack-stack-entry-regexp" variable (:constant-flag t :default-value "^> \\(.*\\)(\\([0-9]+\\))\\([?a-zA-Z0-9_]+\\)()") nil [21200 21415]) ("py-pdbtrack-input-prompt" variable (:constant-flag t :default-value "
[(<]*[Pp]db[>)]+ ") nil [21417 21538]) ("py-pdbtrack-track-range" variable (:constant-flag t :default-value 10000) nil [21540 21655]) ("python-mode-abbrev-table" variable nil nil [21756 21843]) ("define-abbrev-table" code nil nil [21844 21895]) ("python-mode-hook" variable (:user-visible-flag t) nil [21897 21961]) ("make-obsolete-variable" code nil nil [21963 22024]) ("jython-mode-hook" variable (:user-visible-flag t) nil [22025 22134]) ("py-shell-hook" variable (:user-visible-flag t) nil [22136 22194]) ("and" code nil nil [22329 22430]) ("py-mode-map" variable nil nil [22432 22497]) ("if" code nil nil [22498 26549]) ("py-mode-output-map" variable nil nil [26551 26626]) ("if" code nil nil [26627 27137]) ("py-shell-map" variable nil nil [27139 27207]) ("if" code nil nil [27208 27449]) ("py-mode-syntax-table" variable nil nil [27451 27532]) ("when" code nil nil [27533 29664]) ("py-dotted-expression-syntax-table" variable nil nil [29765 29872]) ("when" code nil nil [29873 30134]) ("py-safe" function (:arguments ("&rest" "body")) nil [30152 30307]) ("py-keep-region-active" function nil nil [30309 30621]) ("py-point" function (:arguments ("position")) nil [30623 31664]) ("py-highlight-line" function (:arguments ("from" "to" "file" "line")) nil [31666 32023]) ("py-in-literal" function (:arguments ("&optional" "lim")) nil [32025 32547]) ("py-fast-in-literal" function (:arguments ("&optional" "lim")) nil [32651 32862]) ("if" code nil nil [32864 32954]) ("py-menu" variable nil nil [33096 33280]) ("and" code nil nil [33282 34418]) ("py-imenu-class-regexp" variable (:default-value (concat "\\(" "^[ 	]*" "\\(class[ 	]+[a-zA-Z0-9_]+\\)" "\\([ 	]*\\((\\([a-zA-Z0-9_,. 	
]\\)*)\\)?\\)" "[ 	]*:" "\\)")) nil [34444 34832]) ("py-imenu-method-regexp" variable (:default-value (concat "\\(" "^[ 	]*" "\\(def[ 	]+" "\\([a-zA-Z0-9_]+\\)" "[ 	]*(\\([^:#]*\\))" "\\)" "[ 	]*:" "\\)")) nil [34834 35551]) ("py-imenu-method-no-arg-parens" variable (:default-value (quote (2 8))) nil [35553 35831]) ("py-imenu-method-arg-parens" variable (:default-value (quote (2 7))) nil [35833 36101]) ("py-imenu-generic-expression" variable (:default-value (cons (concat py-imenu-class-regexp "\\|" py-imenu-method-regexp) py-imenu-method-no-arg-parens)) nil [36251 36657]) ("py-imenu-generic-regexp" variable nil nil [36825 36861]) ("py-imenu-generic-parens" variable nil nil [36862 36898]) ("py-imenu-create-index-function" function nil nil [36901 37599]) ("py-imenu-create-index-engine" function (:arguments ("&optional" "start-indent")) nil [37601 41511]) ("py-choose-shell-by-shebang" function nil nil [41516 42357]) ("py-choose-shell-by-import" function nil nil [42362 42919]) ("py-choose-shell" function (:user-visible-flag t) nil [42923 43457]) ("python-mode" function (:user-visible-flag t) nil [43476 46999]) ("make-obsolete" code nil nil [47002 47044]) ("jython-mode" function (:user-visible-flag t) nil [47045 47402]) ("let" code nil nil [47700 47929]) ("when" code nil nil [47945 48095]) ("py-outdent-p" function nil nil [48123 48576]) ("py-electric-colon" function (:user-visible-flag t :arguments ("arg")) nil [48578 49908]) ("py-execute-file" function (:arguments ("proc" "filename")) nil [49955 50767]) ("py-comint-output-filter-function" function (:arguments ("string")) nil [50769 51512]) ("py-pdbtrack-overlay-arrow" function (:arguments ("activation")) nil [51514 51998]) ("py-pdbtrack-track-stack-file" function (:arguments ("text")) nil [52000 54465]) ("py-pdbtrack-get-source-buffer" function (:arguments ("block")) nil [54467 56234]) ("py-pdbtrack-grub-for-buffer" function (:arguments ("funcname" "lineno")) nil [56236 57212]) ("py-postprocess-output-buffer" function (:arguments ("buf")) nil [57214 57811]) ("py-serial-number" variable nil nil [57903 57930]) ("py-exception-buffer" variable nil nil [57931 57963]) ("py-output-buffer" variable (:constant-flag t :default-value "*Python Output*") nil [57964 58009]) ("make-variable-buffer-local" code nil nil [58010 58056]) ("py-which-shell" variable nil nil [58101 58128]) ("py-which-args" variable (:default-value py-python-command-args) nil [58129 58175]) ("py-which-bufname" variable (:default-value "Python") nil [58176 58210]) ("make-variable-buffer-local" code nil nil [58211 58255]) ("make-variable-buffer-local" code nil nil [58256 58299]) ("make-variable-buffer-local" code nil nil [58300 58346]) ("py-toggle-shells" function (:user-visible-flag t :arguments ("arg")) nil [58348 59682]) ("py-shell" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [59699 63039]) ("py-clear-queue" function (:user-visible-flag t) nil [63041 63293]) ("py-execute-region" function (:user-visible-flag t :arguments ("start" "end" "&optional" "async")) nil [63297 67705]) ("py-execute-buffer" function (:user-visible-flag t :arguments ("&optional" "async")) nil [67736 68640]) ("py-execute-import-or-reload" function (:user-visible-flag t :arguments ("&optional" "async")) nil [68642 70484]) ("py-execute-def-or-class" function (:user-visible-flag t :arguments ("&optional" "async")) nil [70487 70924]) ("py-execute-string" function (:user-visible-flag t :arguments ("string" "&optional" "async")) nil [70927 71443]) ("py-jump-to-exception" function (:arguments ("file" "line")) nil [71448 72344]) ("py-mouseto-exception" function (:user-visible-flag t :arguments ("event")) nil [72346 72907]) ("py-goto-exception" function (:user-visible-flag t) nil [72909 73276]) ("py-find-next-exception" function (:arguments ("start" "buffer" "searchdir" "errwhere")) nil [73278 74052]) ("py-down-exception" function (:user-visible-flag t :arguments ("&optional" "bottom")) nil [74054 74547]) ("py-up-exception" function (:user-visible-flag t :arguments ("&optional" "top")) nil [74549 75024]) ("py-electric-backspace" function (:user-visible-flag t :arguments ("arg")) nil [75049 77184]) ("py-electric-delete" function (:user-visible-flag t :arguments ("arg")) nil [77187 78090]) ("put" code nil nil [78137 78181]) ("put" code nil nil [78190 78234]) ("put" code nil nil [78248 78305]) ("put" code nil nil [78314 78371]) ("put" code nil nil [78385 78442]) ("put" code nil nil [78451 78508]) ("py-indent-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [78526 79801]) ("py-newline-and-indent" function (:user-visible-flag t) nil [79803 80414]) ("py-compute-indentation" function (:arguments ("honor-block-close-p")) nil [80416 87625]) ("py-guess-indent-offset" function (:user-visible-flag t :arguments ("&optional" "global")) nil [87627 89986]) ("py-comment-indent-function" function nil nil [89988 90567]) ("py-narrow-to-defun" function (:user-visible-flag t :arguments ("&optional" "class")) nil [90569 90988]) ("py-shift-region" function (:arguments ("start" "end" "count")) nil [90992 91279]) ("py-shift-region-left" function (:user-visible-flag t :arguments ("start" "end" "&optional" "count")) nil [91281 92374]) ("py-shift-region-right" function (:user-visible-flag t :arguments ("start" "end" "&optional" "count")) nil [92376 93111]) ("py-indent-region" function (:user-visible-flag t :arguments ("start" "end" "&optional" "indent-offset")) nil [93113 96281]) ("py-comment-region" function (:user-visible-flag t :arguments ("beg" "end" "&optional" "arg")) nil [96283 96508]) ("py-previous-statement" function (:user-visible-flag t :arguments ("count")) nil [96542 97238]) ("py-next-statement" function (:user-visible-flag t :arguments ("count")) nil [97240 97929]) ("py-goto-block-up" function (:user-visible-flag t :arguments ("&optional" "nomark")) nil [97931 99358]) ("py-beginning-of-def-or-class" function (:user-visible-flag t :arguments ("&optional" "class" "count")) nil [99360 101130]) ("defalias" code nil nil [101159 101233]) ("py-end-of-def-or-class" function (:user-visible-flag t :arguments ("&optional" "class" "count")) nil [101235 103401]) ("defalias" code nil nil [103430 103492]) ("py-mark-block" function (:user-visible-flag t :arguments ("&optional" "extend" "just-move")) nil [103529 108373]) ("py-mark-def-or-class" function (:user-visible-flag t :arguments ("&optional" "class")) nil [108375 111530]) ("py-forward-into-nomenclature" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [111555 112187]) ("py-backward-into-nomenclature" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [112189 112548]) ("py-pdbtrack-toggle-stack-tracking" function (:arguments ("arg")) nil [112575 113100]) ("turn-on-pdbtrack" function nil nil [113102 113185]) ("turn-off-pdbtrack" function nil nil [113187 113271]) ("unless" code nil nil [113312 113396]) ("py-pychecker-run" function (:user-visible-flag t :arguments ("command")) nil [113398 114278]) ("py-symbol-near-point" function nil nil [114640 115261]) ("py-help-at-point" function (:user-visible-flag t) nil [115263 115890]) ("py-dump-help-string" function (:arguments ("str")) nil [116141 117573]) ("py-describe-mode" function (:user-visible-flag t) nil [117575 127926]) ("info-look" include nil nil [127928 127948]) ("when" code nil nil [128062 128386]) ("py-parse-state-re" variable (:default-value (concat "^[ 	]*\\(elif\\|else\\|while\\|def\\|class\\)\\>" "\\|" "^[^ #	
]")) nil [128410 128527]) ("py-parse-state" function nil nil [128529 129851]) ("py-nesting-level" function nil nil [129853 130101]) ("py-backslash-continuation-line-p" function nil nil [130128 130613]) ("py-continuation-line-p" function nil nil [130615 130809]) ("py-goto-beginning-of-tqs" function (:arguments ("delim")) nil [130811 131430]) ("py-goto-initial-line" function nil nil [131432 132375]) ("py-goto-beyond-final-line" function nil nil [132377 133341]) ("py-statement-opens-block-p" function nil nil [133343 134366]) ("py-statement-closes-block-p" function nil nil [134368 134755]) ("py-goto-beyond-block" function nil nil [134757 135151]) ("py-goto-statement-at-or-above" function nil nil [135153 135709]) ("py-goto-statement-below" function nil nil [135711 136214]) ("py-go-up-tree-to-keyword" function (:arguments ("key")) nil [136216 137237]) ("py-suck-up-leading-text" function nil nil [137239 137544]) ("py-suck-up-first-keyword" function nil nil [137546 137891]) ("py-current-defun" function nil nil [137893 139377]) ("py-help-address" variable (:constant-flag t :default-value "python-mode@python.org") nil [139382 139482]) ("py-version" function (:user-visible-flag t) nil [139484 139668]) ("py-submit-bug-report" function (:user-visible-flag t :arguments ("enhancement-p")) nil [139744 140869]) ("py-kill-emacs-hook" function nil nil [140873 141082]) ("add-hook" code nil nil [141132 141179]) ("add-hook" code nil nil [141180 141252]) ("or" code nil nil [141300 141445]) ("py-fill-comment" function (:arguments ("&optional" "justify")) nil [141584 143717]) ("py-fill-string" function (:arguments ("start" "&optional" "justify")) nil [143720 145802]) ("py-fill-paragraph" function (:user-visible-flag t :arguments ("&optional" "justify")) nil [145804 147007]) ("python-mode" package nil nil [147012 147034]))
    :file "python-mode.el"
    :pointmax 147064
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
